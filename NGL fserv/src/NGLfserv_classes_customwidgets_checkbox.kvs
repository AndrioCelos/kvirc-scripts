alias(NGLfserv::classes::customwidgets::checkbox)
{
	class(NGLfserv::classes::customwidgets::checkbox,hbox)
	{
		constructor(text,pointer)
		{
			$$->%ckbox=$new(checkbox,$$)
			%label=$new(label,$$)
			%label->$setAlignment("Left")
			%label->$setText($0)
			//$$->$setStretchFactor($$->%ckbox,15)
			$$->$setStretchFactor(%label,1)
			$$->$setSpacing(2)
			if ($str.left($1,1)!="%") {
				$$->%ckbox->$setChecked($1);
			}
			else{
				$$->%ckbox->%pointer=$1
				%tmp=\%check\=$1
				eval %tmp
				$$->%ckbox->$setChecked(%check)
			}
			if ($version(s)>20070122){
				privateimpl($$->%ckbox,clickEvent)
				{
					%check=$$->$isChecked()
					if ($$->%pointer==1 || !$$->%pointer) {$$->$parent->$emit(clicked,%check);return;}
					eval $$->%pointer\=$0
					$$->$parent->$emit(clicked,%check)
				}
			}
			else{
				privateimpl($$->%ckbox,toggleEvent)
				{
					if ($$->%pointer==1 || !$$->%pointer) {$$->$parent->$emit(clicked,$0);return;}
					eval $$->%pointer\=$0
					$$->$parent->$emit(clicked,$0)
				}
			}
			privateimpl($$->%ckbox,commit)
			{
				eval $$->%pointer\=$0
			}
		}
		commit()
		{
			if ($$->%ckbox->%pointer) eval $$->%ckbox->%pointer\=$$->%ckbox->$isChecked()
		} 
		setChecked()
		{
			$$->%ckbox->$setChecked($0)
		}
		isChecked()
		{
			return $$->%ckbox->$isChecked()
		}
	}
}

