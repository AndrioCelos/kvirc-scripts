class("NGLfserv::classes::find","object")
{
	function constructor
	{
$$->%tmp_results=0
$$->%flag_searchend=$false
	}
	function end
	{
return $$->%flag_searchend
	}
	function nrOccurrences
	{
return $$->%tmp_res
	}
	function occurrences
	{
return $str.split("??",$$->%occurrence)
	}
	function progressiveScan
	{
$$->%time=$hptimestamp
$$->%time_available=$0
NGLfserv::corefunctions::ngldebug startscan
%time=$$->$treeScan($$->%trigger->$firstnode())
if (!%time)
	$$->%flag_searchend=$true
return $$->%flag_searchend
	}
	function setFind
	{
$$->%tofind[]=$str.split(" ",$0)
$$->%length=$length($$->%tofind[])
$$->%max_occ=$int($1)
$$->%tmp_res=0
$$->%trigger=$2
	}
	function treeScan
	{
%item=$0
		if (!%item->%thisNodeCompleted){
			%item->%thisNodeCompleted=$true
			%tmp[]=%item->%files_list[]
			%list[]=%tmp[]
			%sizes[]=%item->%file_size[]
			for (%j=0;%j<$$->%length;%j++){
		 		%tmp[]=$str.grep($$->%tofind[%j],%tmp[])
		 		if (!%tmp[]) break
			 }
			if($length(%tmp[])) {
				%len=$($$->%max_occ-$$->%tmp_res)
				if ($length(%tmp[])<%len) %len=$length(%tmp[])
				%count=0
		 		for (%k=0;%k<%len;%k++) {
		 			 if (!%item->%filesNotShared{%tmp[%k]}){
		 			 	%id=0
		 				while(%list[%id]!=%tmp[%k]) %id++
		 				%str=%str%tmp[%k]?%sizes[%id]?%item->%index?%id??
		 				%count++
		 				if (%len==%count) break
		 			}
		 		}
				$$->%occurrence=$$->%occurrence%str??
				$$->%tmp_res .=%count
				if ($$->%tmp_res>$$->%max_occ){
					$$->%flag_searchend=$true
					break
				}
			}
		}
		if (($hptimestamp-$$->%time)>$$->%time_available || $$->%flag_searchend) return $true
 		%folders[]=%item->$children()
		for (%i=0;%i<%folders[]#;%i++) {
			if (!%folders[%i]->%dirNotShared && !%folders[%i]->%extradirtemp){
				if (!%folders[%i]->%allSubFoldersScanned){
	  				if (!$$->$treeScan(%folders[%i]))
	  					%item->%allSubFoldersScanned=$true()
	   				else
	   					%fl=$true
		   		}
		   	}
			if (%fl) break
		}
		if (%fl) return $true
	}
	function trigger
	{
return $$->%trigger->$triggerName()
	}
}
