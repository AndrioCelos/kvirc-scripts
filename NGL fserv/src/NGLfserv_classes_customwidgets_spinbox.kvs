class("NGLfserv::classes::customwidgets::spinbox","hbox")
{
	function commit
	{
if ($$->%spinbox->%pointer) eval $$->%spinbox->%pointer\=$$->%spinbox->$value()
	}
	function constructor
	{
%label=$new(label,$$)
%label->$setText($0)
$$->%spinbox=$new(spinbox,$$)
$$->%spinbox->$setMinimumWidth(80)
$$->$setStretchFactor(%label,1)
if ($2) $$->%spinbox->$setMaxValue($2)
if ($3) $$->%spinbox->$setSuffix($3)
if ($4) $$->%spinbox->$setLineStep($4)

if ($str.isnumber($1) || ($str.left($1,1)!="%")){ 
	$$->%spinbox->$setValue($1);
	objects.connect $$->%spinbox valueChanged $$ valueChangedEvent
}
else {
	%tmp=\%text\=$1
	eval %tmp
	$$->%spinbox->$setValue(%text)
	$$->%spinbox->%pointer=$1
	privateimpl($$->%spinbox,valueChangedEvent){
		eval $$->%pointer\=$0
	}
}
	}
	function setLineStep
	{
$$->%spinbox->$setLineStep($0)
	}
	function setMaxValue
	{
$$->%spinbox->$setMaxValue($0)
	}
	function setSuffix
	{
$$->%spinbox->$setSuffix($0)
	}
	function value
	{
return $$->%spinbox->$value()
	}
	function valueChangedEvent
	{
$$->$emit(valueChanged,$0)
	}
}
