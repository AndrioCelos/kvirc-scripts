alias(NGLfserv::classes::asynchIOoperations)
{
	class(NGLfserv::classes::asynchLoad,object)
	{
	 	function constructor()
		{
			$$->%instances=$new(list,$$)
		}
		function addTrigger()
		{
			$$->%instances->$append($0)
			objects.connect $0 updated $$ nexttrigger
		}
		function start()
		{
			if (!$$->%instances->$count()) return $false
			$$->%instances->$moveFirst()
			$$->%instances->$current()->$updateStart()
			return $true
		}
		function nextTrigger()
		{
			objects.disconnect $$->%instances->$current() updated $$ nexttrigger
			$$->$loadNotShared($$->%instances->$current())
			$$->%instances->$moveNext()
			if ($$->%instances->$current){
				$$->%instances->$current()->$updateStart()
			}
			else{
				NGLfserv::corefunctions::ngldebug loading complete
				delete $$
				halt
			}
		}
		function loadNotShared()
		{
			%c=$$->%instances->$current()->%c
			config.setsection %c general
			%len=$config.read(%c,notshared)
			%lenf=%len
			%i=0
			%count=0
			while(%count<%len){
				if ($config.hasSection(%c,notshared%i)){
					%filetmp=""
					%missing=$false
					%count++
					config.setsection %c notshared%i
					%fl=$config.read(%c,files,"")
					if (%fl) %files[]=$str.split("|",%fl)	
					%node=$$->%trigger->$getFolderObjFromPath($config.read(pathfromtrigger))
					if (%node){
						%rrf=$$->%trigger->$getRealPath(%node)
						if (!%fl)	%node->%dirNotShared=$true
						else {
							foreach(%file,%files[]){
								if (%file){
									if ($file.exists(%rrf/%file)) {
						 				%node->%filesNotShared{%file}=$true
						 				%filetmp=%filetmp%file|
						 			}
						 			else %missing=$true
						 		}
							}
							if (%missing){
								if(%filetmp)
								 	config.write %c files %filetmp
								 else{
								 	%item=%node
									while (%item !=$$->%trigger->$firstNode()){
	  						 			if ($$->%trigger->$checkChildrenNotShared(%item)){
	  						 				%item=%item->$parent()
	 			  			 			}
	 			  			 			else{
	 			  			 				%item->%dirNotShared=$true
											config.write %c pathfromtrigger $$->%trigger->$getLocalTriggerPath(%node)
											config.write %c files ""
	 			  			 				%changed=$true
	 			  			 				break
	 			  			 			}
	 			  			 		}
	 			  			 		if (!%changed && %node!=$$->%trigger->$firstNode()){
	 			  			 			%node->%dirNotShared=$true
	 			  			 			config.write %c pathfromtrigger $$->%trigger->$getLocalTriggerPath(%node)
										config.write %c files ""
	 			  			 		}
	 			  			 		%changed=$false  			 		
	 			  				 }
	 			  		 	}
						}
					}
					else{
						config.clearsection %c notshared%i
						%lenf--
					}
				}
				%i++
			}
			if (%len!=%lenf) {
				config.setsection %c general
				config.write %c notshared %lenf
			}
			config.close %c
			$$->%instances->$current()->%c=
		}		
	}
}

