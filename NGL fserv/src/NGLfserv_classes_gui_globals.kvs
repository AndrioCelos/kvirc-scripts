alias(NGLfserv::classes::gui::globals)
{
	class(NGLfserv::classes::gui::globals,widget)
	{
		constructor()
		{
			%main_layout=$new(layout,$this)
			%main_layout->$setSpacing(2)
					
			// Box send properties nglfserv
	
			%gb=$$->$addWidget(groupbox,$$,$tr("Send properties","nglfserv"),5,20,Horizontal,1)
			%maxSends = $$->$addWidget(spinbox,%gb,$tr("Max sends"),"\%MaxSends",100)
			%eachSends = $$->$addWidget(spinbox,%gb,$tr("Send per user"),"\%EachSends",100)
			%maxResends = $$->$addWidget(spinbox,%gb,$tr("Max Resends"),"\%MaxResends",100)
			$$->%spinBoxInstantSend=$$->$addWidget(spinbox,%gb,$tr("Instant send limit"),$(%InstantSendSize / 1024),10240,"kB",2)
			$$->%spinBoxResendInterval=$$->$addWidget(spinbox,%gb,$tr("Resend interval"),$(%ResendInterval / 1000),,"s")
			$$->%spinBoxLoadSendsDelay=$$->$addWidget(spinbox,%gb,$tr("Load delay"),$(%LoadSendsDelay / 1000),,"s")
			%main_layout->$addWidget(%gb,0,0)
					
			// Box queue properties
			%gb=$$->$addWidget(groupbox,$$,$tr("Queues properties"),5,20,Horizontal,1)
			%remnickfromQueues = $$->$addWidget(checkbox,%gb,$tr("Remove nick on part/quit"),"\%RemoveNickOnPartOrQuitFromQueue",100)
			
			%maxQueues = $$->$addWidget(spinbox,%gb,$tr("Queue slots:"),"\%MaxQueues",999)
			//%maxQueues->$setMaxValue(999)
			
			%eachQueues = $$->$addWidget(spinbox,%gb,$tr("Slots per user:"),"\%EachQueues",100)
			
			%comboBoxPriorityType=$$->$addWidget(combobox,%gb,$tr("Priority To:"),$array("-","o","ov"),"\%PriorityType")
			%main_layout->$addWidget(%gb,0,1)
	
			// Box Dcc properties
			%gb=$$->$addWidget(groupbox,$$,$tr("DCC Properties"),5,20,Horizontal,1)
			%ckbReverse=$$->$addWidget(checkbox,%gb,$tr("Always use DCC Reverse"),"\%DccReverse")
			%ckbCloneDetection=$$->$addWidget(checkbox,%gb,$tr("Enable clone detection"),"\%CloneDetection")
			%main_layout->$addWidget(%gb,0,2)
				
			// Box color properties
			%colors[]=$array($tr("Dark Blue"),$tr("Dark Green"),$tr("Red"),\
					$tr("Dark Red"),$tr("Violet"),$tr("Orange"),\
					$tr("Yellow"),$tr("Light Green"),$tr("Light Blue"),$tr("Light Grey"),\
					$tr("Blue"),$tr("Light Violet"),$tr("Dark Grey"),$tr("Grey"))
			%gbColors=$$->$addWidget(groupbox,$$,$tr("File server colors"),5,20,Horizontal,1)
			
			%comboBoxColor1=$$->$addWidget(combobox,%gbColors,$tr("Primary Color:"),%colors[],$(%NGLc1 - 2))
			%comboBoxColor2=$$->$addWidget(combobox,%gbColors,$tr("Secondary Color:"),%colors[],$(%NGLc1 - 2))
		
			%main_layout->$addWidget(%gbcolors,1,0)
			
			// Box find properties
			%gbFind=$$->$addWidget(groupbox,$$,$tr("@find properties"),5,20,Horizontal,1)
			%findMsgs = $$->$addWidget(spinbox,%gbFind,$tr("Max results:"),"\%FindMsg",100)
			%maxCache =$$->$addWidget(spinbox,%gbFind,$tr("Max cache"),"\%MaxCacheFind",1000)
			%main_layout->$addWidget(%gbFind,1,1)
				
			// Box other
			%gb=$$->$addWidget(groupbox,$$,$tr("Other"),5,20,Horizontal,1)
			
			%ckbDebug=$$->$addWidget(checkbox,%gb,$tr("Enable debug"),"\%G_NGLdebug")
			%ckbNGLVersion=$$->$addWidget(checkbox,%gb,$tr("Reply to NGLVERSION"),"\%NGLRespondToNGLVersion")
			%main_layout->$addWidget(%gb,1,2)
				// Tooltips sends
			%maxSends->$setTooltip($tr("Maximum number of contemporary sends (globally)"))
			%eachSends->$setTooltip($tr("Maximum number of contemporary sends per user"))
			%maxResends->$setTooltip($tr("Number of times a failed transfer will be retried"))
			$$->%spinBoxInstantSend->$setTooltip($tr("Files with size smaller than this will be sent immediately"))
			$$->%spinBoxResendInterval->$setTooltip($tr("Seconds elapsed before retrying a dcc-transfer<br><b>Note: </b>Values bigger than 15 seconds are discouraged"))
			$$->%spinBoxLoadSendsDelay->$setTooltip($tr("<p>Incomplete sends from previous sessions are saved: this is the delay before they start upon kvirc startup. If your connection to server takes more than this, consider increasing this value.<\p>"))
			// Tooltips queues
			%maxQueues->$setTooltip($tr("Maximum number of contemporary queued files (globally)"))
			%eachQueues->$setTooltip($tr("Maximum number of contemporary queued files per user"))
			%comboBoxPriorityType->$setTooltip($tr("You can set different priority type.<br> Users with priority will stay in queue before not-prioritized users.<br>-: Stands for no priority<br>o: Stands for priority to opped users<br>ov: Stands for opped and voiced users"))
			// Tooltips DCC
			%ckbReverse->$setTooltip($tr("Dcc-Chats and Dcc-Sends will<br> be effectuated connecting to the remote host instead of listening on a local port. This is very useful for users with private addresses that are unreachable from the extern."))
			%ckbCloneDetection->$setTooltip($tr("Any user accessing the File Server<br> will be scanned for clone detection and if recognized as a clone will be treated as a single user"))
			
			// Tooltips colors
			%gbColors->$setTooltip($tr("Set the colors of File Server messages"))
			
			// Tooltips @find
			%findMsgs->$setTooltip($tr("Maximum number of reported found results"))
			%maxCache->$setTooltip($tr("<b>(Advanced)</b> Maximum number of cached results"))
			
			// Tooltips other
			%ckbDebug->$setTooltip($tr("Enables debug messages. This could be useful to make a report of any anomaly you could find"))
			%ckbNGLVersion->$setTooltip($tr("File server will respond to command /ctcp nick NGLVERSION telling the script version in use"))
		
			objects.connect $$->%spinBoxInstantSend valueChanged $$ oldcommit
			objects.connect $$->%spinBoxResendInterval valueChanged $$ oldcommit
			objects.connect $$->%spinBoxLoadSendsDelay valueChanged $$ oldcommit
					
			privateimpl(%comboBoxColor1,activatedEvent) 
			{
				%NGLc1=$($$->$currentItem() + 2)
			}
			privateimpl(%comboBoxColor2,activatedEvent) 
			{
				%NGLc2=$($$->$currentItem() + 2)
			}
		}
		addWidget()
		{
			%widget=$NGLfserv::corefunctions::addWidget($0,$1,$2,$3,$4,$5,$6)
			if ($0!="label")	$$->%interfaces_list[]<+%widget
			return %widget
		}
		commit()
		{
			foreach (%interface,$$->%interfaces_lists[]) %interface->$commit()
			%InstantSendSize=$($$->%spinBoxInstantSend->$value()*1024)
			%ResendInterval=$($$->%spinBoxResendInterval->$value()*1000)
			%LoadSendsDelay=$($$->%spinBoxLoadSendsDelay->$value()*1000)
		}	
		oldcommit()
		{
			%source=$$->$signalSender()
			if (%source==$$->%spinBoxInstantSend) %InstantSendSize=$(%source->$value()*1024)
			else if (%source==$$->%spinBoxLoadSendsDelay) %LoadSendsDelay=$(%source->$value()*1000)
			else %ResendInterval=$(%source->$value()*1000)
		}
	}
}

